categories:
- Programming/By Language/Python
- Programming/Libraries
comments: true
date: 2012-09-06 14:00:46
layout: post
title: Generating epubs
---
As <a href="http://blog.jverkamp.com/2012/08/28/so-ive-been-writing/" title="So I’ve been writing…">I've previously noted</a>, I've been writing a fair bit recently. Everything that I write is stored in a series of plain text files (actually <a href="http://daringfireball.net/projects/markdown/" title="Markdown">Markdown</a>, but only really using italicized blocks and headers), something like this: 

<!--more-->

<pre>┌ ☺ <span style="color: purple;">verkampj</span>@"@"<span style="color: #ffcc00;">minty</span> <span style="color: green;">~/Writing/Novels/A Sea of Stars</span>
└ ls -1

01 - Liftoff.txt
02 - Borealis.txt
03 - Inspection.txt
04 - Troubleshooting.txt
...</pre>

As a side note, that's what my ZSH prompt looks like. I'm actually really happy with how I've (finally) gotten everything set up, so perhaps I'll post those some day. <span style="color: #ffcc00;">Minty</span> is my laptop's name, based on <a href="http://linuxmint.com/" title="Linux Mint">Linux Mint</a> (although amusingly I'm using a different OS now).

Theoretically, it should be easy enough to turn this into an ebook, so that's exactly what I've written. You can get the entire script <a href='https://github.com/jpverkamp/small-projects/blob/master/scripts/make-epub.py'>here</a> and it requires the <a href="https://code.google.com/p/python-markdown2/" title="Python: Markdown2">Markdown2</a> and <a href="https://code.google.com/p/python-epub-builder/" title="Python library: Epub builder">Epub Builder</a> libraries for Python to be installed. 

Here are some of the more interesting bits of the code. First, set up the ebook:

@codeblock["python"]|{
# Start an epub
book = EpubBook()
book.setTitle(title)
book.addCreator('JP Verkamp')
book.addTitlePage()
book.addTocPage()
}|

After that, we need to go through each of the files. Assume that there are Markdown headers (`#` and `##`) in the files, either nested one or two levels deep. If there's only one level of headers, those become chapters. If there are two, the first level become parts and the second become chapters. This is also where the content gets Markdown'd into what will actually be display to the user, so if I wanted to add any extensions, this is where it would go. 

@codeblock["python"]|{
# Run through the files and find the sections
levels = []
sections = []
buffer = ''
index = '1'
header = ''
min_depth = False
for file in files(path):
  lines = skip_bom(open(file, 'r').read()).split('\n')
  for line in lines:
	 if line.startswith('#'):
		if header:
		   buffer = ''.join([c for c in buffer if ord(c) < 128])
		   sections.append((index, header, buffer))

		buffer = line

		pounds, header = line.split(' ', 1)
		depth = pounds.count('#')

		if not min_depth or depth < min_depth:
		   min_depth = depth

		if depth == len(levels):
		   levels[-1] += 1
		elif depth < len(levels):
		   levels = levels[:depth]
		   levels[-1] += 1
		else:
		   while depth > len(levels):
			  levels.append(1)

		index = '.'.join([str(s) for s in levels])
	 else:
		buffer += line + '\n'
if buffer:
  buffer = ''.join([c for c in buffer if ord(c) < 128])
  sections.append((index, header, buffer))
}|

Next we've got to actually add the contents to the ebook:

@codeblock["python"]|{
# Generate the book contents
i = 0
for index, header, content in sections:
  print('%s = %s' % (index, header))
  i += 1
  item = book.addHtml('', '%04d.html' % i, html(header, markdown(content)))
  book.addSpineItem(item)
  book.addTocMapNode(item.destPath, header, index.count('.') + 1)
}|

And the finally, create the actual file:

@codeblock["python"]|{
# Create the book
book.createBook(temp)
EpubBook.createArchive(temp, target)
}|

If all goes according to plan, you should have an epub now:

<pre>┌ ☺ <span style="color: purple;">verkampj</span>@"@"<span style="color: #ffcc00;">minty</span> <span style="color: green;">~/Writing/Novels/A Sea of Stars</span>
└ make-epub

Source: /home/verkampj/Dropbox/PlainText/Writing/Novels/A Sea of Stars
Target: A Sea of Stars.epub
  Temp: /tmp/tmphyZfcm

1 = Liftoff
2 = *Borealis*
3 = Inspection
4 = Troubleshooting
...

┌ ☺ <span style="color: purple;">verkampj</span>@"@"<span style="color: #ffcc00;">minty</span> <span style="color: green;">~/Writing/Novels/A Sea of Stars</span>
└ ls -1 *.epub

A Sea of Stars.epub</pre>

Good to go! You can get the entire script <a href='https://github.com/jpverkamp/small-projects/blob/master/scripts/make-epub.py'>here</a>.