categories:
- Programming/By Language/.NET
- Programming/By Language/C#
- Programming/By Project/AnnGram
- Programming/By Topic/Computational Linguistics
- Programming/By Topic/Natural Language Processing
- Programming/By Topic/Neural Networks
- Programming/By Topic/Research
- Research
- Research/By Topic/Computational Linguistics
comments: true
date: 2010-01-21 05:05:19
layout: post
title: AnnGram - Neural Network Progress
---
<a href="http://blog.jverkamp.com/2010/01/12/anngram-neuralnetwork-library/">As expected</a>, I've decided to change libraries from the<strong> </strong><a href="http://franck.fleurey.free.fr/NeuralNetwork/">C# Neural network library</a> to the <a href="NeuronDotNet">NeuronDotNet</a> library.  Essentially, I kept running into problems with the C# Neural network library framework that I couldn't figure out how to get around with the lack of documentation.  I actually think that my <a href="http://blog.jverkamp.com/2010/01/13/anngram-initial-ann-results/">poor results with the original tests</a> may have been a direct results of a misunderstanding with the code base.  I think that the layers were not being hooked up correctly, resulting in low/random values.

<!--more-->

Hopefully, using NeuraonDotNet (with it's much greater selection of documentation and examples) will improve the results that I've been getting.
<div id="_mcePaste" style="overflow: hidden; position: absolute; left: -10000px; top: 0px; width: 1px; height: 1px;"></div>