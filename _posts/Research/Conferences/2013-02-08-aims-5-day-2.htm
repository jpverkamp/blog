title: AIMS-5 - Day 2
date: 2013-02-08T14:00:06
slug: aims-5-day-2
layout: post
categories:
- Programming/By Topic/Censorship
- Programming/By Topic/Networks
- Programming/By Topic/Networks/DNS
- Research
- Research/By Topic/Censorship
comments: true

---
Today's agenda had discussions on Mobile Measurements and IPv6 Annotations, none of which are areas that I find myself particularly interested in. Still, I did learn a few things.<!--more-->

<strong>Yuanyuan Zhou (University of Michigan), <a href="http://www.caida.org/workshops/isma/1302/slides/aims1302_yyzhou.pdf"><i>MobiPerf</i></a></strong>

Basically <a title="GitHub: MobiPerf" href="http://github.com/Mobiperf/MobiPerf">MobiPerf</a> is a project aimed at providing a measurement framework for mobile devices--those running Andoid in particular. It looks interesting and they already have something like 600 active users around the world, so if you're interested in helping them out with their research (and have an Android phone), check out <a title="Google Play: MobiPerf" href="https://play.google.com/store/apps/details?id=com.mobiperf&amp;hl=en">their app</a>.

<strong>Sachit Muckaden (Georgia Tech), <a href="http://www.caida.org/workshops/isma/1302/slides/aims1302_smuckaden.pdf"><i>MySpeedTest: Active and Passive Measurements of Cellular Network Performance</i></a></strong>

MySpeedTest is similar to MobiPerf, designed to collect statistics on Android devices. They collect some bits of active information (including ping and TCP throughput variations) and passive information (battery and signal strength, time, and eventually location) and have a much larger current user base with some 4000 installs and 900 current users. The practices they are using to promote the project are a bit on the off side (the name and having friends' reviews). They have found a few interesting things though. A better signal strength corresponds directly with lower latency, GSM may actually be faster than CDMA, and latency varies with time of day with standard deviation varying even more strongly.

<strong>David Choffnes (University of Washington), <a href="http://www.caida.org/workshops/isma/1302/slides/aims1302_dchoffnes_1.pdf"><i>Toward an Open Platform for Participatory Mobile Measurement</i></a></strong>

This talk was as much a call to arms as anything, hoping to take the framework behind MobiPerf and turn it into a library to be used by any such project measuring this sort of thing. That way, we don't have a few hundred users here and a few thousands there, but rather a mesh of users from a variety of applications. Even better, if it could somehow be embedded in an application like Angry Birds, the reach would be amazing.

<strong>David Choffnes (University of Washington), <a href="http://www.caida.org/workshops/isma/1302/slides/aims1302_dchoffnes_2.pdf"><i>Using the Middle to Meddle with Mobile</i></a></strong>

This was another mobile measurement project that took a completely take. Rather than writing an app that would have to run in the background to collect information, they used the built in VPN capabilities of the phones in question to send all traffic through a VPN server they control. This way they can get full packet traces for basically everything (and do things like act as an ad blocker) but they do lose out so far as device specific information is concerned. Still, it seems like it might just work better than either of the other projects. In the end though, most of the discussion of this talk was about getting @wikipedia["IRB"]{Institutional review board} approval. It's still interesting how IRB interacts with computer science research.

<strong>Robert Beverly (Naval Postgraduate School), <i><a href="http://www.caida.org/workshops/isma/1302/slides/aims1302_rbeverly.pdf">Inferring Internet Server IPv4 and IPv6 Address Relationships</a></i></strong>

This talk was about trying to figure out pairings between the @wikipedia{IPv4} and @wikipedia{IPv6} addresses for the same machines. This could be very interesting because to all indications we're going to be dealing with parallel stacks for many years to come. In addition, IPv6 currently isn't particularly well secured as of yet and that actually introduces vulnerability in the IPv4 ends. I think the most interesting technique was the third he presented which used timing information included in all TCP packets that is shared between both IPv4 and IPv6 stacks. So if you can correlate the skew and timing resolution of a pair of connections and they match, it's entirely possible that they came from the same machine. Unfortunately, @wikipedia["BSD-based"]{Berkeley Software Distribution}distributions completely mess this up, essentially randomizing timing information between different connections. Still, it's an interesting idea.

I present tomorrow, so I had best make a final pass over my slides. There's always something more to do.